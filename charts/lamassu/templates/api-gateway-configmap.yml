kind: ConfigMap
apiVersion: v1
metadata:
  name: api-gateway-config
  namespace: {{.Release.Namespace}}
data:
  init-tls.sh: |
    #!/bin/bash
    BLUE='\033[0;34m'
    GREEN='\033[0;32m'
    ORANGE='\033[0;33m'
    RED='\033[0;31m'
    NOCOLOR='\033[0m'

    # The bundle certificate file
    BUNDLE_CRT_FILE=/shared/bundle.crt
    touch $BUNDLE_CRT_FILE

    echo -e "${BLUE}Bundling certificates...${NOCOLOR}"
    if [ ! -f /certs/downstream.crt ]; then
      echo -e "${RED}downstream.crt not found!${NOCOLOR}"
      exit 1
    else
      cat /certs/downstream.crt > $BUNDLE_CRT_FILE
    fi

    if [ -f /certs/downstream-ca.crt ]; then
      echo -e "${GREEN}downstream-ca.crt found!${NOCOLOR}"
      cat /certs/downstream-ca.crt >> $BUNDLE_CRT_FILE
    else
      echo -e "${ORANGE}downstream-ca.crt not found!${NOCOLOR}"
    fi

    echo -e "${GREEN}Printing certificate bundle...${NOCOLOR}"
    cat $BUNDLE_CRT_FILE
  init.sh: |
    if [ $DEBUG_MODE == "true" ]; then
        echo "Starting Envoy in debug mode..."
        #See https://www.envoyproxy.io/docs/envoy/latest/operations/cli
        /usr/local/bin/envoy -c /etc/envoy.yaml --component-log-level router:trace,http:debug,jwt:trace
    else
        echo "Starting Envoy..."
        /usr/local/bin/envoy -c /etc/envoy.yaml
    fi

  config.yml: |
    admin:
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9900

    static_resources:
      listeners:
        - name: http80
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 80
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    http_protocol_options:
                      accept_http_10: true
                    route_config:
                      virtual_hosts:
                        - name: backend
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/va/"
                              route:
                                prefix_rewrite: "/"
                                cluster: va_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                envoy.filters.http.jwt_authn:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                  disabled: true
                            - match: { prefix: "/" }
                              redirect:
                                path_redirect: "/"
                                https_redirect: true
                    http_filters:
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        - name: http443
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 443
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    generate_request_id: true
                    stat_prefix: ingress_http
                    forward_client_cert_details: "APPEND_FORWARD"
                    set_current_client_cert_details: 
                      chain: true
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                    http_protocol_options:
                      accept_http_10: true
                    route_config:
                      name: local_route
                      request_headers_to_add:
                      {{- if (eq .Values.service.type "NodePort") }}
                      - header:
                          key: "x-forwarded-port"
                          value: "{{ .Values.service.nodePorts.apiGatewayTls }}"
                      {{- end }}
                      virtual_hosts:
                        - name: apis_and_uis
                          domains:
                            - "*"
                          routes:
                            - match:
                                prefix: "/api/va/"
                              route:
                                prefix_rewrite: "/"
                                cluster: va_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                envoy.filters.http.jwt_authn:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                  disabled: true
                                                                    
                            - match:
                                prefix: "/api/ca/"
                              route:
                                prefix_rewrite: "/"
                                cluster: api_ca_cluster
              
                            - match:
                                prefix: "/api/devmanager/"
                              route:
                                prefix_rewrite: "/"
                                cluster: api_device_manager_cluster

                            - match:
                                prefix: "/api/dmsmanager/"
                              route:
                                prefix_rewrite: "/"
                                cluster: api_dms_manager_cluster

                            - match:
                                prefix: "/.well-known/est/"
                              route:
                                cluster: api_dms_manager_cluster

                            - match:
                                prefix: "/api/alerts/"
                              route:
                                prefix_rewrite: "/"
                                cluster: api_alerts_cluster

                            {{ range $index, $svc := .Values.services.apiGateway.extraReverseProxyRouting }}
                            - match:
                                prefix: "{{ $svc.path }}"
                              route:
                                {{ if $svc.prefixRewrite }}
                                prefix_rewrite: "/"
                                {{ end }}
                                cluster: {{ $svc.name }}_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                envoy.filters.http.jwt_authn:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                  disabled: true
                            {{ end }}

                            - match:
                                prefix: "/"
                              route:
                                cluster: ui_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                envoy.filters.http.jwt_authn:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                  disabled: true

                    http_filters:
                      - name: envoy.ext_authz
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                          transport_api_version: V3
                          with_request_body:
                            max_request_bytes: 8192
                            allow_partial_message: true
                          failure_mode_allow: false
                          grpc_service:
                            google_grpc:
                              target_uri: opa-server:9191
                              stat_prefix: ext_authz
                            timeout: 0.5s

                      - name: envoy.filters.http.jwt_authn
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                          providers:
                            lamassu_oidc_provider:
                              forward: true
                              remote_jwks:
                                http_uri:
                                  uri: {{ .Values.auth.oidc.apiGateway.jwks.protocol }}://{{ .Values.auth.oidc.apiGateway.jwks.host }}:{{ .Values.auth.oidc.apiGateway.jwks.port }}{{ .Values.auth.oidc.apiGateway.jwks.path }}
                                  cluster: jwks_cluster
                                  timeout: 10s
                                cache_duration: 600s
                          bypass_cors_preflight: true
                          rules:
                            - match:
                                prefix: "/api/devmanager/.well-known/est"
                            - match:
                                prefix: "/api/dmsmanager/.well-known/est"
                            - match:
                                prefix: "/api/"
                              requires:
                                provider_name: "lamassu_oidc_provider"
                            - match:
                                # Lamassu UI
                                prefix: "/"

                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router


              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  common_tls_context:
                    tls_params:
                      tls_minimum_protocol_version: "TLSv1_2"
                      tls_maximum_protocol_version: "TLSv1_2"
                    tls_certificates:
                      - certificate_chain: { filename: "/shared/bundle.crt" }
                        private_key: { filename: "/certs/downstream.key" }
                    validation_context:
                      trust_chain_verification: ACCEPT_UNTRUSTED
                        # filename: /certs/lamassu-dms-ca.crt

      clusters:
        - name: api_ca_cluster
          dns_lookup_family: V4_ONLY
          connect_timeout: 0.25s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: ca
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: ca
                          port_value: 8085
          health_checks:
            - interval: 60s
              timeout: 2s
              interval_jitter: 1s
              unhealthy_threshold: 1
              healthy_threshold: 1
              http_health_check:
                path: /health

        - name: api_device_manager_cluster
          dns_lookup_family: V4_ONLY
          connect_timeout: 0.25s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: device-manager
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: device-manager
                          port_value: 8085
          health_checks:
            - interval: 60s
              timeout: 2s
              interval_jitter: 1s
              unhealthy_threshold: 1
              healthy_threshold: 1
              http_health_check:
                path: /health
              
        - name: api_dms_manager_cluster
          dns_lookup_family: V4_ONLY
          connect_timeout: 0.25s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: dms-manager
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: dms-manager
                          port_value: 8085
          health_checks:
            - interval: 60s
              timeout: 2s
              interval_jitter: 1s
              unhealthy_threshold: 1
              healthy_threshold: 1
              http_health_check:
                path: /health

        - name: api_alerts_cluster
          dns_lookup_family: V4_ONLY
          connect_timeout: 0.25s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: cloud_connector
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: alerts
                          port_value: 8085
          health_checks:
            - interval: 60s
              timeout: 2s
              interval_jitter: 1s
              unhealthy_threshold: 1
              healthy_threshold: 1
              http_health_check:
                path: /health
              
        - name: ui_cluster
          dns_lookup_family: V4_ONLY
          connect_timeout: 0.25s
          type: STRICT_DNS
          load_assignment:
            cluster_name: ui_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: ui
                          port_value: 8080

        - name: jwks_cluster
          connect_timeout: 5s
          type: STRICT_DNS
          dns_lookup_family: V4_ONLY
          load_assignment:
            cluster_name: jwks_cluster
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: {{ .Values.auth.oidc.apiGateway.jwks.host }}
                      port_value: {{ .Values.auth.oidc.apiGateway.jwks.port }}
          {{ if eq .Values.auth.oidc.apiGateway.jwks.protocol "https" }}
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext"
              common_tls_context:
                validation_context:
                  trusted_ca:
                    filename: /etc/ssl/certs/ca-certificates.crt
          {{ end }}

        - name: va_cluster
          dns_lookup_family: V4_ONLY
          connect_timeout: 0.25s
          type: STRICT_DNS
          load_assignment:
            cluster_name: va_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: va
                          port_value: 8085
          health_checks:
            - interval: 60s
              timeout: 2s
              interval_jitter: 1s
              unhealthy_threshold: 1
              healthy_threshold: 1
              http_health_check:
                path: /health

        {{ range $index, $svc := .Values.services.apiGateway.extraReverseProxyRouting }}
        - name: {{ $svc.name }}_cluster
          dns_lookup_family: V4_ONLY
          connect_timeout: 0.25s
          type: STRICT_DNS
          load_assignment:
            cluster_name: {{ $svc.name }}_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: {{ $svc.target.host }}
                          port_value: {{ $svc.target.port }}
          health_checks:
            - interval: 60s
              timeout: 2s
              interval_jitter: 1s
              unhealthy_threshold: 1
              healthy_threshold: 1
              http_health_check:
                path: {{ $svc.target.healthCheck.path }}
        {{ end }}

